<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd"
	 >
	<!-- 配置注解 -->
	<context:component-scan base-package="com.icss.club"></context:component-scan>
	<!-- 配置注解驱动 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!--静态资源配置-->
    <mvc:resources location="/statics/" mapping="/statics/**" />
	<mvc:default-servlet-handler />
	 <!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截所有mvc控制器 -->
			<mvc:mapping path="/**"/>
			<!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
			<mvc:exclude-mapping path="/statics/**" />
			<mvc:exclude-mapping path="/user_index" />
			<mvc:exclude-mapping path="/admin_index" />		
			<bean class="com.icss.club.interceptor.LoginInterceptor"></bean>			
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 加载数据配置文件 -->
	<context:property-placeholder location="classpath:*.properties" />
	<!-- 连接数据库 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc_driver}"></property>
		<property name="jdbcUrl" value="${jdbc_url}"></property>
		<property name="user" value="${jdbc_username}"></property>
		<property name="password" value="${jdbc_password}"></property>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialPoolSize" value="20" />
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
	</bean>
	
	<!-- 整合mybatis -->
	<!-- 定义SqlSessionFactory -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<mybatis-spring:scan base-package="com.icss.club.mapper" />

	<!-- 通用 Mapper -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name="basePackage" value="com.icss.club.mapper" />
		<property name="properties" >
			<value>
				mappers=tk.mybatis.mapper.common.Mapper
			</value>
		</property>
	</bean>
	

	<!-- 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 配置nultipartresolver,注意：id名必须这样写，不然会报错 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="maxInMemorySize" value="10240000"></property>
    </bean>
</beans>